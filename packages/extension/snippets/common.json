{
    "Franky import": {
        "scope": "javascript,typescript,typescriptreact",
        "prefix": "imp",
        "body": [
            "import $1 from '$2';"
        ]
    },
    "Franky Fields": {
        "scope": "javascript,typescript,typescriptreact",
        "prefix": "ff",
        "body": [
            "import {defineFields} from '@yqg/type';",
            "",
            "export default defineFields({",
            "    name: {field: 'name', label: '名称'},",
            "});",
            ""
        ]
    },
    "Franky Options": {
        "scope": "javascript,typescript,typescriptreact",
        "prefix": "fo",
        "body": [
            "import {defineForm, defineTable} from '@yqg/type';",
            "",
            "import {fixedRight,op} from 'src/common/constant/fields';",
            "",
            "import Fields from './fields';",
            "",
            "export const FormOptions = Object.freeze(defineForm({",
            "\tfieldDefs: [",
            "\t\tFields.name,",
            "\t]",
            "}));",
            "",
            "export const EditModalFormOptions = Object.freeze(defineForm({",
            "\tfieldDefs: [",
            "\t\tFields.name,",
            "\t]",
            "}));",
            "",
            "export const DetailFormOptions = Object.freeze(defineForm({",
            "\tfieldDefs: [",
            "\t\tFields.name,",
            "\t]",
            "}));",
            "",
            "export const TableOptions = Object.freeze(defineTable({",
            "\tcolDefs: [",
            "\t\tFields.name,",
            "\t\tfixedRight(op)",
            "\t]",
            "}));",
            ""
        ]
    },
    "Franky Vue Detail Modal": {
        "scope": "vue",
        "prefix": "fvdm",
        "body": [
            "<template>",
            "\t<yqg-static-form",
            "\t\ttitle=\"详情\"",
            "\t\t:options=\"DetailFormOptions\"",
            "\t\t:values=\"record\"",
            "\t/>",
            "</template>",
            "",
            "<script type=\"text/babel\">",
            "import {modal} from 'src/common/mixin';",
            "",
            "import {DetailFormOptions} from '../constant/options';",
            "",
            "export default {",
            "\tname: '${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}',",
            "",
            "\tonlyClose: true,",
            "",
            "\tmixins: [modal],",
            "",
            "\tprops: {",
            "\t\trecord: {",
            "\t\t\ttype: Object,",
            "\t\t\tdefault: () => ({})",
            "\t\t}",
            "\t},",
            "",
            "\tdata() {",
            "\t\treturn {",
            "\t\t\tDetailFormOptions",
            "\t\t};",
            "\t}",
            "};",
            "</script>",
            ""
        ]
    },
    "Franky Vue Edit Modal": {
        "scope": "vue",
        "prefix": "fvem",
        "body": [
            "<template>",
            "\t<yqg-simple-form",
            "\t\t:title=\"title\"",
            "\t\t:options=\"EditModalFormOptions\"",
            "\t\t:values=\"record\"",
            "\t\t@confirm=\"onConfirm\"",
            "\t\t@cancel=\"dismiss\"",
            "\t/>",
            "</template>",
            "",
            "<script type=\"text/babel\">",
            "",
            "import {modal} from 'src/common/mixin';",
            "import Xxx from 'src/common/resource/xxx';",
            "",
            "import {EditModalFormOptions} from '../constant/options';",
            "",
            "export default {",
            "\tname: '${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}',",
            "",
            "\tmixins: [modal],",
            "",
            "\tinject: ['opSuccess'],",
            "",
            "\tprops: {",
            "\t\trecord: {",
            "\t\t\ttype: Object,",
            "\t\t\tdefault: () => ({})",
            "\t\t}",
            "\t},",
            "",
            "\tdata() {",
            "\t\treturn {",
            "\t\t\tEditModalFormOptions,",
            "\t\t};",
            "\t},",
            "",
            "\tcomputed: {",
            "\t\ttitle() {",
            "\t\t\treturn this.record.id ? '编辑' : '创建';",
            "\t\t}",
            "\t},",
            "",
            "\tmethods: {",
            "\t\tasync onConfirm({record}) {",
            "\t\t\tawait Xxx.save(record);",
            "\t\t\tthis.opSuccess();",
            "\t\t\tthis.close();",
            "\t\t}",
            "\t}",
            "};",
            "</script>",
            ""
        ]
    },
    "Franky React Edit Modal": {
        "scope": "javascript,typescript,typescriptreact",
        "prefix": "frem",
        "body": [
            "import {useState} from 'react';",
            "import {useTranslation} from 'react-i18next';",
            "",
            "import YqgSimpleForm from '@yqg/react/src/component/yqg-simple-form';",
            "",
            "import Xxx from 'common/resource/xxx';",
            "import YqgToast from 'common/util/yqg-toast';",
            "",
            "import {FormOptions} from '../constant/options';",
            "",
            "type Props = {",
            "\trecord?: any,",
            "\tclose: (value?: any) => void,",
            "\tdismiss: (reason?: any) => void,",
            "\tlocation: any",
            "};",
            "",
            "const EditModal: React.FC<Props> = ({record, dismiss, close, location}) => {",
            "\tconst {t} = useTranslation();",
            "\tconst {query: {companyId}} = location;",
            "\tconst [values, setValues] = useState({companyId, ...record});",
            "",
            "\tconst onConfirm = async ({record}) => {",
            "\t\tawait Xxx.save(record);",
            "\t\tYqgToast.success(t('common.submitSuccess'));",
            "\t\tclose();",
            "\t};",
            "",
            "\tconst onChange = ({record: newRecord}) => {",
            "\t\tsetValues(newRecord);",
            "\t};",
            "",
            "\treturn (",
            "\t\t<YqgSimpleForm {...{",
            "\t\t\ttitle: record?.id ? t('editAccount') : t('addAccount'),",
            "\t\t\tvalues,",
            "\t\t\toptions: FormOptions,",
            "\t\t\tonCancel: dismiss,",
            "\t\t\tonConfirm,",
            "\t\t\tonChange,",
            "\t\t\tctx: {companyId, setValues}",
            "\t\t}}",
            "\t\t/>",
            "\t);",
            "};",
            "",
            "export default EditModal;",
            ""
        ]
    },
    "Franky Vue Index": {
        "scope": "vue",
        "prefix": "fv",
        "body": [
            "<template>",
            "\t<div class=\"${TM_DIRECTORY/^.+\\/(.*)$/$1/}\">",
            "\t\t<yqg-simple-form",
            "\t\t\tauto-search",
            "\t\t\t:options=\"FormOptions\"",
            "\t\t\tconfirm-label=\"common.query\"",
            "\t\t\t@confirm=\"onSearch\"",
            "\t\t\t@reset=\"onSearch\"",
            "\t\t>",
            "\t\t\t<template #extraBtns>",
            "\t\t\t\t<a-button",
            "\t\t\t\t\tv-show=\"isAuthorized(Permissions.CONFIG_CREATE)\"",
            "\t\t\t\t\t@click=\"openEditModal()\"",
            "\t\t\t\t\tv-text=\"'新建'\"",
            "\t\t\t\t/>",
            "\t\t\t</template>",
            "\t\t</yqg-simple-form>",
            "\t\t<yqg-simple-table",
            "\t\t\t:options=\"TableOptions\"",
            "\t\t\t:records=\"records\"",
            "\t\t\t:pagination=\"pagination\"",
            "\t\t\t@change=\"onTableChange\"",
            "\t\t>",
            "\t\t\t<template #op=\"{ record }\">",
            "\t\t\t\t<a-button",
            "\t\t\t\t\tsize=\"small\"",
            "\t\t\t\t\t@click=\"openDetailModal(record)\"",
            "\t\t\t\t>",
            "\t\t\t\t\t查看",
            "\t\t\t\t</a-button>",
            "\t\t\t\t<a-button",
            "\t\t\t\t\tsize=\"small\"",
            "\t\t\t\t\t:disabled=\"record.distributed\"",
            "\t\t\t\t\t@click=\"openEditModal(record)\"",
            "\t\t\t\t>",
            "\t\t\t\t\t编辑",
            "\t\t\t\t</a-button>",
            "\t\t\t\t<a-popconfirm",
            "\t\t\t\t\ttitle=\"是否确认删除\"",
            "\t\t\t\t\t@confirm=\"deleteRecord(record)\"",
            "\t\t\t\t>",
            "\t\t\t\t\t<a-button",
            "\t\t\t\t\t\tsize=\"small\"",
            "\t\t\t\t\t\ttype=\"danger\"",
            "\t\t\t\t\t>",
            "\t\t\t\t\t\t删除",
            "\t\t\t\t\t</a-button>",
            "\t\t\t\t</a-popconfirm>",
            "\t\t\t</template>",
            "\t\t</yqg-simple-table>",
            "\t</div>",
            "</template>",
            "",
            "<script type=\"text/babel\">",
            "import {table} from 'src/common/mixin';",
            "import Xxx from 'src/common/resource/xxx';",
            "",
            "import {FormOptions, TableOptions} from './constant/options';",
            "import DetailModal from './modal/detail-modal';",
            "import EditModal from './modal/edit-modal';",
            "",
            "export default {",
            "\tname: '${TM_DIRECTORY/^.+\\/(.*)$/${1:/pascalcase}/}',",
            "",
            "\tmixins: [table],",
            "",
            "\tinject: ['isAuthorized', 'Permissions'],",
            "",
            "\tdata() {",
            "\t\treturn {",
            "\t\t\trecords: [],",
            "\t\t\tFormOptions,",
            "\t\t\tTableOptions",
            "\t\t};",
            "\t},",
            "",
            "\tmethods: {",
            "\t\tasync onRefresh() {",
            "\t\t\tconst {params} = this;",
            "\t\t\tconst {",
            "\t\t\t\tdata: {body}",
            "\t\t\t} = await Xxx.get({params});",
            "\t\t\tthis.pagination.total = body.length;",
            "\t\t\tthis.records = body;",
            "\t\t},",
            "",
            "\t\topenEditModal(record) {",
            "\t\t\tthis.\\$modal.open(EditModal, {record}).then(this.onRefresh);",
            "\t\t},",
            "",
            "\t\topenDetailModal(record) {",
            "\t\t\tthis.\\$modal.open(DetailModal, {record}).then(this.onRefresh);",
            "\t\t},",
            "",
            "\t\tdeleteRecord(record) {",
            "\t\t\tXxx.delete(record).then(() => {",
            "\t\t\t\tthis.onRefresh();",
            "\t\t\t});",
            "\t\t}",
            "\t}",
            "};",
            "",
            "</script>",
            "",
            "<style lang=\"scss\" scoped>",
            "",
            "</style>",
            "",
            ""
        ]
    },
    "Franky React Index": {
        "scope": "javascript,typescript,typescriptreact",
        "prefix": "fr",
        "body": [
            "import {Button} from 'antd';",
            "import {useState} from 'react';",
            "import {useTranslation} from 'react-i18next';",
            "import {connect} from 'react-redux';",
            "",
            "import {useModal} from '@yqg/react';",
            "import YqgSimpleForm from '@yqg/react/src/component/yqg-simple-form';",
            "import YqgSimpleTable from '@yqg/react/src/component/yqg-simple-table';",
            "",
            "import saveFileFromResponse from 'yqg-common/utils/save-file';",
            "",
            "import Xxx from 'common/resource/xxx';",
            "import YqgPrivilege from 'common/component/yqg-privilege';",
            "import {PRIVILEGE_DEMO} from 'common/constant/basic/privilege';",
            "import {ApiParams, usePagination} from 'common/hook';",
            "import {isAuthorized} from 'common/util/privilege';",
            "",
            "import {FormOptions, TableOptions} from './constant/options';",
            "import EditModal from './modal/edit';",
            "",
            "type Props = {location: any, currentUser: object};",
            "const ${TM_DIRECTORY/^.+\\/(.*)$/${1:/pascalcase}/}: React.FC<Props> = ({currentUser, location}) => {",
            "\tconst {t} = useTranslation();",
            "\tconst {query: {companyId}} = location;",
            "",
            "\tconst [records, setRecords] = useState<any[]>(null);",
            "",
            "\tconst {",
            "\t\tonSearchNext,",
            "\t\tonRefresh",
            "\t} = usePagination(fetchList);",
            "\tconst {open} = useModal();",
            "",
            "\tasync function fetchList({params}: ApiParams) {",
            "\t\tconst {data: {body}} = await Xxx.list({params: {",
            "\t\t\tcompanyId, ...params",
            "\t\t}});",
            "\t\tsetRecords(body);",
            "\t}",
            "",
            "\tconst onExport = async ({form}) => {",
            "\t\tconst params = form.getFieldsValue();",
            "\t\tconst res = await Xxx.export({params: {",
            "\t\t\tcompanyId, ...params",
            "\t\t}, responseType: 'blob'});",
            "\t\tsaveFileFromResponse(res);",
            "\t};",
            "",
            "\tconst onEdit = (record?: any) => {",
            "\t\topen(EditModal, {record, location}).then(onRefresh, x => x);",
            "\t};",
            "",
            "\tconst extraBtns = formCtx => (",
            "\t\t<YqgPrivilege",
            "\t\t\thasAny={[PRIVILEGE_DEMO]}",
            "\t\t>",
            "\t\t\t<Button",
            "\t\t\t\ttype=\"primary\"",
            "\t\t\t\tonClick={() => onEdit()}",
            "\t\t\t>",
            "\t\t\t\t{t('common.submit')}",
            "\t\t\t</Button>",
            "\t\t\t<Button onClick={() => onExport(formCtx)}>",
            "\t\t\t\t{t('common.export')}",
            "\t\t\t</Button>",
            "\t\t</YqgPrivilege>",
            "\t);",
            "",
            "\treturn (",
            "\t\t<>",
            "\t\t\t<YqgSimpleForm",
            "\t\t\t\t{...{",
            "\t\t\t\t\tautoSearch: true,",
            "\t\t\t\t\ttagVisible: true,",
            "\t\t\t\t\toptions: FormOptions,",
            "\t\t\t\t\tonConfirm: onSearchNext,",
            "\t\t\t\t\tonReset: onSearchNext,",
            "\t\t\t\t\textraBtns,",
            "\t\t\t\t\tconfirmLabel: 'common.query',",
            "\t\t\t\t\tctx: {companyId}",
            "\t\t\t\t}}",
            "\t\t\t/>",
            "\t\t\t<YqgSimpleTable",
            "\t\t\t\t{...{",
            "\t\t\t\t\toptions: TableOptions,",
            "\t\t\t\t\trecords,",
            "\t\t\t\t\tctx: {onEdit, companyId, currentUser, isAuthorized}",
            "\t\t\t\t}}",
            "\t\t\t/>",
            "\t\t</>",
            "\t);",
            "};",
            "",
            "export default connect(state => ({currentUser: state.user}))(${TM_DIRECTORY/^.+\\/(.*)$/${1:/pascalcase}/});",
            ""
        ]
    },
    "Franky Common Resource": {
        "scope": "javascript,typescript",
        "prefix": "fcr",
        "body": [
            "import {assign, customGet} from '@yqg/resource';",
            "",
            "const api = {",
            "\turlPrefix: '/admin/bus_contract/ledger',",
            "\turl: ':id',",
            "\tgetList: customGet('list'),",
            "};",
            "",
            "export default assign(api);",
            ""
        ]
    }
}
